#include <bits/stdc++.h>
using namespace std;
#define lli long long int
#define MAXN 200000
lli n;
bool grid[4001][4001] = {false};
int x = 2000, y  =2000;   ///Error occured here, where x, y, aready global but I called it here
int ans = 0;
int hori[4] = {1,-1,0 , 0};
int vert[4] = {0,0, -1, 1};
ifstream fin("gates.in");
    ofstream fout("gates.out");
struct stuff{
    int x;
    int y;
};
void floodfill(int i, int j)
{
    if(grid[i][j]== true || i>3000 || j>3000 || i<1000 || j<1000) return ;
    grid[i][j] = true;
    queue<stuff> q;
    stuff temp;temp.x  =j; temp.y = i;
    q.push(temp);
    while(!q.empty()){
        stuff v  =q.front();
        //cout<<v.x<< " "<<v.y<< " "<<grid[v.y][v.x]<<endl;
        q.pop();
        for(int  z =0;z<4;z++){
            if(!(grid[v.y +vert[z]][v.x+hori[z]]== true || v.y+vert[z]>3000 || v.x+hori[z]>3000 || v.y+vert[z]<1000 || v.x+hori[z]<1000)){
                stuff temp; temp.x = v.x+ hori[z]; temp.y = v.y+vert[z];
                grid[temp.y][temp.x] = true;
                q.push(temp);
            }
        }

    }
    //cout<<endl;
}
void add(char direction)
{
    if(direction == 'N')y++;
    if(direction == 'S')y--;
    if(direction == 'W') x--;
    if(direction == 'E') x++;
    grid[y][x] = true;
}
int main()
{
    string s;
    fin>>n>>s;
    /*
    for(int i  = 0;i<=4000; i++){
        for(int j  =0;j<=4000;j++){
            grid[i][j] = false;
        }
    }
    */
    grid[y][x] = true;
    for(int i  =0;i<n;i++){
        char dir = s[i];
        add(dir);
        add(dir);
    }
    for(int i  =1000;i<=3000;i++){
        for(int j = 1000;j<=3000;j++){
            if(grid[i][j]== false){
                ans++;
                floodfill(i,j);
            }
        }
    }
    fout<<ans-1<<endl;
}
