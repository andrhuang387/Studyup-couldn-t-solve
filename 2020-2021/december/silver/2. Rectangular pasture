#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_pbds;
#define ll long long
#define ar array
#define PB push_back
#define all(x) x.begin(), x.end()
#define sz(x) (int)(x).size()
typedef vector<pair<int,int>> vii;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> oset;

int N;
vii grid;
oset S;
ll ans = 1;
int main() {
    cin >> N;
    for (int i = 0; i < N; i++) {
        int x, y; cin >> x >> y;
        grid.push_back({x, y});
    }
    sort(all(grid));                          ///Input all values and sort by x value
    for (int i = 0; i < N; i++) {
        int y = grid[i].second;                
        S.clear();
        for (int j = i; j < N; j++) {        ///From location to end, add values to the ordered set and find the # of values below and above. Multiply to get total;
            int y2 = grid[j].second;
            S.insert(y2);
            int smaller = S.order_of_key(min(y, y2)) + 1;
            int larger = j - i + 1 - S.order_of_key(max(y, y2));
            ans += smaller * larger;
        }
    }

    cout << ans << endl;


    return 0;
}
