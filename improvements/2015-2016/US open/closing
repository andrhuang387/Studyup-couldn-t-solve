#include <bits/stdc++.h>
using namespace std;
#define lli long long int
#define faster ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
#define MAXN 3001
#define vi vector<int>
#define vpi vector<pair<int,int>>
#define pb push_back
#define mp make_pair
///Input
///Make graph
///set of all available
///If all visited.size = availe yes
///When remove, dfs and remove from the available pile
set<int> t;///touched
int visited[MAXN] = {0};
set<int>op;
    vector<int> adj[MAXN];
    int n, m;
void dfs(int pos)
{
    visited[pos]++;
    t.insert(pos);
    for(auto it: adj[pos]){
        if(op.find(it) != op.end() && visited[it]==0) dfs(it);
    }
}
int main()
{
    faster;
    freopen("closing.in","r",stdin);
    freopen("closing.out","w", stdout);
    cin>>n>>m;
    for(int i = 0;i<m;i++){
        int a, b;
        cin>>a>>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
        op.insert(a);
        op.insert(b);
    }
    for(int i  =0;i<n;i++){
        int remove;
        cin>>remove;
        dfs(*op.begin());
        if(t.size() == op.size()) printf("YES\n");
        else printf("NO\n");
        t.clear();
        memset(visited, 0 ,sizeof(visited));
        auto it =  op.find(remove);
        op.erase(remove);
    }
    //int irre;
    //cin>>irre;


}
